<html>
    <head>
        <title>Administration</title>
        <link rel="stylesheet" href="style.css">
    </head>
    <body class="admin-page-body">

        <div id="adminTitleBar" class="admin-title-bar">
            <a id="pages-button" onclick="setSelectedTab('pages-tab', 'pages-button')">Pages</a>
            <a id="database-button" onclick="setSelectedTab('database-tab', 'database-button')">Database</a>
            <a id="marketplace-button">Marketplace</a>
            <a href="/">Home Page</a>
            <a href="/logout">Logout</a>
        </div>

        <div id="adminContainer" class="admin-container">

            <div id="pages-tab" style="display: none;">
                <div style="display: flex; justify-content: space-evenly;">

                    <a onclick="setPostType('aboutSelect', 'about')" class="submit-button" style="float: left;">Set About</a>
                    <select id="aboutSelect" class="standard-select">
                        <option>Select the about page...</option>
                    </select>

                    <a onclick="setPostType('contactSelect', 'contact')" class="submit-button" style="float: right;">Set Contact</a>
                    <select id="contactSelect" class="standard-select">
                        <option>Select the contact page...</option>
                    </select>

                </div>
            </div>

            <div id="database-tab" style="display: none;">
                <div class="admin-table-container" style="float: left;">
                    <table id="usersTable" class="admin-table">
                        <tr>
                            <th>Username</th>
                            <th>Admin</th>
                            <th>Change Role</th>
                            <th>Delete</th>
                        </tr>
                    </table>
                    <a onclick="selectHiddenTab('database-tab', 'database-button', 'createuser-tab')" class="admin-table-button-create">Create User</a>
                </div>

                <div class="admin-table-container" style="float: right;">
                    <table id="postsTable" class="admin-table">
                        <tr>
                            <th>Post Title</th>
                            <th>Length</th>
                            <th>Edit</th>
                            <th>Delete</th>
                        </tr>
                    </table>
                    <a onclick="selectHiddenTab('database-tab', 'database-button', 'createpost-tab')" class="admin-table-button-create">Create Post</a>
                </div>
            </div>

            <div id="createpost-tab" class="admin-create-post-container" style="display: none;">
                <form action="/posts/create" method="POST" enctype="multipart/form-data">
                    <input type="text" name="postname" class="standard-input" style="float: left;" placeholder="Enter your post's title.">
                    <input type="file" name="image" class="admin-create-post-upload" style="float: right;">
                    <textarea name="postcontent" class="admin-create-post-textarea" rows="6" cols="60"></textarea>
                    <div style="display: flex; justify-content: space-evenly;">
                        <input type="submit" class="submit-button" value="Create Post">
                        <a class="submit-button" onclick="setSelectedTab('createpost-tab', 'database-button')">Cancel</a>
                    </div>
                </form>
            </div>

            <div id="editpost-tab" class="admin-create-post-container" style="display: none;">
                <form method="POST" enctype="multipart/form-data">
                    <input type="text" name="postname" class="standard-input" style="text-align: center;">
                    <textarea name="postcontent" class="admin-create-post-textarea" rows="6" cols="60"></textarea>
                    <div style="display: flex; justify-content: space-evenly;">
                        <input type="submit" class="submit-button" value="Finish Editing">
                        <a class="submit-button" onclick="setSelectedTab('editpost-tab', 'database-button')">Cancel</a>
                    </div>
                </form>
            </div>

            <div id="createuser-tab" style="display: none; margin: 20vh;">
                <div class="create-user-container">
                    <h2 class="login-form-title" style="text-align: center;">Create User</h2>
                    <form action="/users/create" method="POST" style="text-align: center;">
                        <input type="text" name="username" class="standard-input" placeholder="Username"><br>
                        <input type="password" name="password" class="standard-input" placeholder="Password"><br>
                        <label class="standard-label">Admin Permissions: <input type="checkbox" name="isadmin" style="transform: scale(3); margin: 20px;"></label><br>
                        <div>
                            <input type="submit" class="submit-button" value="Create User">
                            <a class="submit-button" onclick="setSelectedTab('createuser-tab', 'database-button')">Cancel</a>
                        </div> 
                    </form>   
                </div>
                
            </div>

        </div>

        <script>

            function setPostType(selectorid, posttype) {
                let selectorelem = document.getElementById(selectorid)
                let selected = selectorelem.options[selectorelem.selectedIndex].value
                fetch('/posts/set/' + posttype + '/' + selected)
                location.reload()
            }

            function selectHiddenTab(currenttabid, currentbuttonid, othertabid) {
                setSelectedTab(currenttabid, currentbuttonid)
                setTimeout(function () {setSelectedTab(othertabid, currentbuttonid)}, 500)
            }

            function deleteDatabaseEntry(apicall, databaserow) {
                fetch(apicall)
                databaserow.remove()
            }

            function changeUserRole(username, adminstatuselement) {
                fetch('/users/changerole/' + username)
                if (adminstatuselement.innerText == 'true') {
                    adminstatuselement.innerText = 'false'
                } else {
                    adminstatuselement.innerText = 'true'
                }
            }

            function formatEditForm(url) {
                fetch(url)
                    .then(res => res.json())
                    .then((data) => {
                        if (data.status == 'success') {
                            selectHiddenTab('database-tab', 'database-button', 'editpost-tab')
                            document.getElementById('adminContainer').style.opacity = 0
                            document.querySelector('#editpost-tab > form').action = '/posts/edit/' + data.post._id
                            let posttitle = document.querySelector('#editpost-tab > form > input.standard-input')
                            posttitle.value = data.post.name
                            let postcontent = document.querySelector('#editpost-tab > form > textarea')
                            postcontent.textContent = data.post.content

                        }

                    })
            }     

            function setSelectedTab(tabid, buttonid) {
                let parent = document.getElementById('adminContainer')
                let titlebar = document.getElementById('adminTitleBar')
                let buttonelement = document.getElementById(buttonid)
                let tabelement = document.getElementById(tabid)

                if (parent.style.opacity == 0) {
                    if (buttonelement) {
                        for (let i = 0; i < titlebar.children.length; i++) {
                            titlebar.children[i].classList.add('isDisabled')
                        } buttonelement.classList.remove('isDisabled')
                    }
                    parent.style.opacity = 1
                } else {
                    for (let i = 0; i < titlebar.children.length; i++) {
                        titlebar.children[i].classList.remove('isDisabled')
                    } parent.style.opacity = 0
                }

                for (let i = 0; i < parent.children.length; i++) {
                    parent.children[i].style.display = "none"
                }
                tabelement.style.display = "block"
            }

            function fillUserTable() {
                fetch('/users/loadall')
                    .then(res => res.json())
                    .then((data) => {
                        if (data.status == 'success') {
                            data.users.forEach((user) => {
                                let parent = document.getElementById('usersTable')
                                let row = document.createElement('tr')

                                // For Username
                                let usernametd = document.createElement('td')
                                usernametd.innerText = user.username
                                row.appendChild(usernametd)

                                // For Admin Status
                                let isadmintd = document.createElement('td')
                                isadmintd.innerText = user.isadmin
                                row.appendChild(isadmintd)

                                // For Change Role Button
                                let changeroletd = document.createElement('td')
                                let changerole = document.createElement('a')
                                changerole.onclick = function () {changeUserRole(user.username, isadmintd)}
                                changerole.innerText = 'Change Role'
                                changerole.classList.add('admin-table-button')
                                changeroletd.appendChild(changerole)
                                row.appendChild(changeroletd)

                                // For Delete Button
                                let deletebuttontd = document.createElement('td')
                                let deletebutton = document.createElement('a')
                                deletebutton.onclick = function() {deleteDatabaseEntry('/users/delete/' + user.username, row)}
                                deletebutton.innerText = 'Delete'
                                deletebutton.classList.add('admin-table-button')
                                deletebuttontd.appendChild(deletebutton)
                                row.appendChild(deletebuttontd)

                                parent.appendChild(row)
                            })
                        }
                    })
            }

            function fillPostTable() {
                fetch('/posts/loadall')
                    .then(res => res.json())
                    .then((data) => {

                        if (data.status == 'success') {

                            data.posts.forEach((post) => {

                                let parent = document.getElementById('postsTable')
                                let row = document.createElement('tr')
                                
                                // For Title
                                let postnametd = document.createElement('td')
                                let postname = document.createElement('p')
                                postname.innerText = post.name
                                postnametd.appendChild(postname)
                                row.appendChild(postnametd)

                                // For Length
                                let lengthtd = document.createElement('td')
                                lengthtd.innerText = post.length
                                row.appendChild(lengthtd)

                                // For Edit Button
                                let editbuttontd = document.createElement('td')
                                let editbutton = document.createElement('a')
                                editbutton.onclick = function () {formatEditForm('/posts/load/' + post._id)}
                                editbutton.innerText = 'Edit'
                                editbutton.classList.add('admin-table-button')
                                editbuttontd.appendChild(editbutton)
                                row.appendChild(editbuttontd)

                                // For Delete Button
                                let deletebuttontd = document.createElement('td')
                                let deletebutton = document.createElement('a')
                                deletebutton.onclick = function() {
                                    deleteDatabaseEntry('/posts/delete/' + post._id, row)
                                    document.querySelectorAll('option[value="' + post._id + '"]').forEach(option => option.remove())
                                }
                                deletebutton.innerText = 'Delete'
                                deletebutton.classList.add('admin-table-button')
                                deletebuttontd.appendChild(deletebutton)
                                row.appendChild(deletebuttontd)

                                // Append row to table
                                parent.appendChild(row)

                                // Append options for page
                                let aboutoption = document.createElement('option')
                                aboutoption.value = post._id
                                aboutoption.innerText = post.name
                                document.getElementById('aboutSelect').appendChild(aboutoption)

                                let contactoption = document.createElement('option')
                                contactoption.value = post._id
                                contactoption.innerText = post.name
                                document.getElementById('contactSelect').appendChild(contactoption)
                                
                            })
                        }
                    })
            }

            window.onload = function() {
                fillUserTable()
                fillPostTable()
            }

        </script>
    </body>
</html>